// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopMGR.Contexto;

#nullable disable

namespace ShopMGR.Contexto.Migrations
{
    [DbContext(typeof(ShopMGRDbContexto))]
    [Migration("20250417154605_AddConfiguraconGlobal")]
    partial class AddConfiguraconGlobal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.ConfiguracionGlobal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("MapsID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Piso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTrabajo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTrabajo");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.HorasYDescripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("Horas")
                        .HasColumnType("real");

                    b.Property<int>("IdTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("TrabajoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrabajoId");

                    b.ToTable("HorasYDescripcion");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPresupuesto")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPresupuesto");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoInsumos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoLabor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoMateriales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("HorasEstimadas")
                        .HasColumnType("float");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ValorHoraDeTrabajo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.TelefonoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("TelefonoCliente");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Trabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPresupuesto")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPresupuesto")
                        .IsUnique()
                        .HasFilter("[IdPresupuesto] IS NOT NULL");

                    b.ToTable("Trabajos");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Direccion", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Cliente", "Cliente")
                        .WithMany("Direccion")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Foto", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Trabajo", "Trabajo")
                        .WithMany("Fotos")
                        .HasForeignKey("IdTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajo");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.HorasYDescripcion", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Trabajo", "Trabajo")
                        .WithMany("HorasDeTrabajo")
                        .HasForeignKey("TrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajo");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Material", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Presupuesto", "Presupuesto")
                        .WithMany("Materiales")
                        .HasForeignKey("IdPresupuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Presupuesto", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Cliente", "Cliente")
                        .WithMany("Presupuestos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.TelefonoCliente", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Cliente", "Cliente")
                        .WithMany("Telefono")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Trabajo", b =>
                {
                    b.HasOne("ShopMGR.Dominio.Modelo.Cliente", "Cliente")
                        .WithMany("Trabajos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopMGR.Dominio.Modelo.Presupuesto", "Presupuesto")
                        .WithOne("Trabajo")
                        .HasForeignKey("ShopMGR.Dominio.Modelo.Trabajo", "IdPresupuesto");

                    b.Navigation("Cliente");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Cliente", b =>
                {
                    b.Navigation("Direccion");

                    b.Navigation("Presupuestos");

                    b.Navigation("Telefono");

                    b.Navigation("Trabajos");
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Presupuesto", b =>
                {
                    b.Navigation("Materiales");

                    b.Navigation("Trabajo")
                        .IsRequired();
                });

            modelBuilder.Entity("ShopMGR.Dominio.Modelo.Trabajo", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("HorasDeTrabajo");
                });
#pragma warning restore 612, 618
        }
    }
}
